/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
// an error I got, which result in unlimited loop, for tracking last // i writ -->
// if(l1->next) l1 = l1->next;
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dum = new ListNode(-100);
        int c = 0;
        ListNode* temp = dum;
        while(l1 || l2 ){
            int va = (l1? l1->val : 0) +( l2?l2->val:0 )+ c;
            c = va/10; va = va%10;
            // cout<<va<<" ";
            temp->next = new ListNode(va%10);
            temp = temp->next;
            if(l1) l1 = l1->next;// could also be written in form of ternary
            // l1 = l1? l1->next?NULL;
            if(l2) l2 = l2->next;
        }
        if(c){
            temp->next = new ListNode(c);
        }
        return dum->next;
    }
};

